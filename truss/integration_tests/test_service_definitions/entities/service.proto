syntax = "proto3";

package TEST;
import "client.proto";
import "client_attribution_partner.proto";
import "partner_account.proto";
import "country.proto";
import "partner.proto";
import "site.proto";
import "vendor.proto";
import "vendor_request.proto";

// The Platform Entity service definition.
service EntitiesService {
  rpc ClientGetById(ClientGetByIdRequest) returns (ClientEntity) {}
  rpc ClientGetByIds(ClientGetByIdsRequest) returns (ClientEntities) {}
  rpc ClientGetByRefId(ClientGetByRefIdRequest) returns (ClientEntity) {}
  rpc ClientFind(ClientFindRequest) returns (ClientEntities) {}
  rpc ClientCreate(ClientCreateRequest) returns (ClientEntity) {}

  rpc ClientAttributionPartnerGetById(ClientAttributionPartnerGetByIdRequest) returns (ClientAttributionPartnerEntity) {}
  rpc ClientAttributionPartnerGetByIds(ClientAttributionPartnerGetByIdsRequest) returns (ClientAttributionPartnerEntities) {}
  rpc ClientAttributionPartnerGetByPartnerRefId(ClientAttributionPartnerGetByPartnerRefIdRequest) returns (ClientAttributionPartnerEntity) {}
  rpc ClientAttributionPartnerFind(ClientAttributionPartnerFindRequest) returns (ClientAttributionPartnerEntities) {}
  rpc ClientAttributionPartnerCreate(ClientAttributionPartnerCreateRequest) returns (ClientAttributionPartnerEntity) {}
  rpc ClientAttributionPartnerUpdate(ClientAttributionPartnerUpdateRequest) returns (ClientAttributionPartnerEntity) {}
  
  rpc PartnerAccountGetById(PartnerAccountGetByIdRequest) returns (PartnerAccountEntity) {}
  rpc PartnerAccountGetByIds(PartnerAccountGetByIdsRequest) returns (PartnerAccountEntities) {}
  rpc PartnerAccountGetByRefId(PartnerAccountGetByRefIdRequest) returns (PartnerAccountEntity) {}  
  rpc PartnerAccountFindByClientPartner(PartnerAccountFindByClientPartnerRequest) returns (PartnerAccountEntities) {}
  rpc PartnerAccountFindByClient(PartnerAccountFindByClientRequest) returns (PartnerAccountEntities) {}
  rpc PartnerAccountCreate(PartnerAccountCreateRequest) returns (PartnerAccountEntity) {}
  rpc PartnerAccountUpdate(PartnerAccountUpdateRequest) returns (PartnerAccountEntity) {}

  rpc CountryGetByCode(CountryGetByCodeRequest) returns (CountryEntity) {}
  rpc CountryGetByCodes(CountryGetByCodesRequest) returns (CountryEntities) {}
  rpc CountryGetByName(CountryGetByNameRequest) returns (CountryEntity) {}

  rpc PartnerGetById(PartnerGetByIdRequest) returns (PartnerEntity) {}
  rpc PartnerGetByIds(PartnerGetByIdsRequest) returns (PartnerEntities) {}
  rpc PartnerGetByRefId(PartnerGetByRefIdRequest) returns (PartnerEntity) {}
  rpc PartnerGetByClientVendor(PartnerGetByClientVendorRequest) returns (PartnerEntities) {}
  rpc PartnerGetByClientVendorName(PartnerGetByClientVendorNameRequest) returns (PartnerEntities) {}
  rpc PartnerCreate(PartnerCreateRequest) returns (PartnerEntity) {}

  rpc SiteGetById(SiteGetByIdRequest) returns (SiteEntity) {}
  rpc SiteGetByIds(SiteGetByIdsRequest) returns (SiteEntities) {}
  rpc SiteGetByRefId(SiteGetByRefIdRequest) returns (SiteEntity) {}
  rpc SiteGetByClientPackage(SiteGetByClientPackageRequest) returns (SiteEntities) {}
  rpc SiteCreate(SiteCreateRequest) returns (SiteEntity) {}

  rpc VendorGetById(VendorGetByIdRequest) returns (VendorEntity) {}  
  rpc VendorGetByIds(VendorGetByIdsRequest) returns (VendorEntities) {}  
  rpc VendorGetByRefId(VendorGetByRefIdRequest) returns (VendorEntity) {}  
  rpc VendorGetByName(VendorGetByNameRequest) returns (VendorEntity) {} 
  rpc VendorFind(VendorFindRequest) returns (VendorEntities) {}    
  rpc VendorCreate(VendorCreateRequest) returns (VendorEntity) {}  
  rpc VendorUpdate(VendorUpdateRequest) returns (VendorEntity) {}
  
  rpc VendorRequestFind(VendorRequestFindRequest) returns (VendorRequestEntities) {}
  rpc VendorRequestCreate(VendorRequestCreateRequest) returns (VendorRequestEntity) {}

  rpc Status(StatusRequest) returns (StatusResponse) {}
  rpc Ping(PingRequest) returns (PingResponse) {}
}

enum ServiceStatus {
  FAIL = 0;
  OK = 1;
}

message StatusRequest {
  bool full = 1;
}

message StatusResponse {
  ServiceStatus status = 1;
}

message PingRequest {}

message PingResponse {
  ServiceStatus status = 1;
}
