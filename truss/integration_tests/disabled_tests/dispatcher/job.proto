syntax = "proto3";

package TEST;

// JobConfigRequest is for calls to Submit
// and concerned with configuration of a job
// for submission to a given platform
message JobConfigRequest {
  int32 delay = 1;
  int32 retries = 2;
  int32 timeout = 3;
  string params = 4;

  // iron, ecs, docker, lamdba
  Platform platform = 5;

  // the code, in iron = code_name, docker = container, lambda = zip/function
  string package = 6;

  // the 'target', iron = project, docker = local or host, lambda = region/vpc, ecs = cluster
  string target = 7;

  int32 priority = 8;
  int32 attempt = 9;

  enum Memory {
    LOW = 0;
    MEDIUM = 1;
    HIGH = 2;
  };

  Memory memory = 10;  
}

// JobRequest is concerned with looking up
// submitted job, to collect stop, retry or cancel a job
// or collect info or logs,
message JobRequest {
  string id = 1;
  Platform platform = 2;
  string target = 3;
}

// JobResponse is the standard response from
// any platform, with platform specific data as
// json (info, string) to be schemaless and consumed
// as desired by any receiving client
message JobResponse {
  string id = 1;
  Platform platform = 6;

  enum Status {
    pending = 0;
    submitted = 1;
    running = 2;
    failed = 3;
    canceled = 4;
    complete = 5;
  }

  Status status = 7;
}

message JobLogsResponse {
  string id = 1;
  Platform platform = 2;
  string logs = 3;
}

message Platform {
  enum Target {
    IRON = 0;
    ECS = 1;
    LAMBDA = 2;
    DOCKER = 3;
  };

  Target target = 1;
}
