// Code generated by go-bindata.
// sources:
// NAME-service/cmd/NAME/main.gotemplate
// NAME-service/cmd/NAME-server/main.gotemplate
// NAME-service/handlers/handlers.gotemplate
// NAME-service/handlers/hooks.gotemplate
// NAME-service/handlers/middlewares.gotemplate
// NAME-service/svc/client/cli/handlers/handlers.gotemplate
// NAME-service/svc/client/grpc/client.gotemplate
// NAME-service/svc/client/http/client.gotemplate
// NAME-service/svc/endpoints.gotemplate
// NAME-service/svc/server/cli/cli.gotemplate
// NAME-service/svc/server/run.gotemplate
// NAME-service/svc/transport_grpc.gotemplate
// NAME-service/svc/transport_http.gotemplate
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x57\x5f\x6f\xdc\x36\x12\x7f\x96\x3e\xc5\x44\xa8\x2f\x92\xab\x68\x9d\xe2\xee\x65\xd3\x7d\x48\xed\xf4\x2e\x40\xeb\x18\x5e\x37\x7d\x70\x8d\x03\x97\x1a\x49\xbc\x48\xa4\x42\x52\xbb\x36\x84\xfd\xee\x87\x21\xb9\xb2\x9c\xda\x71\x83\xe6\x21\x4b\x91\x33\xbf\x19\xce\x9f\xdf\xd0\x8b\x05\x9c\xaa\x12\xa1\x46\x89\x9a\x59\x2c\x61\x73\x07\x56\x0f\xc6\x14\x70\xf6\x01\xce\x3f\x5c\xc1\xbb\xb3\xf7\x57\x45\xbc\x58\xc0\x25\xea\x41\x4a\x21\x6b\x2f\x00\x3b\xd1\xb6\xa0\xb6\xa8\x77\x5a\x58\x04\xdb\x08\x03\x95\x68\xd1\x09\x7f\x44\x6d\x84\x92\x4b\x18\xc7\x22\xac\xf7\xfb\xd9\x01\x9c\x31\x8b\xf3\x53\xfa\xde\xef\xe3\xb8\x67\xfc\x13\xab\x11\x3a\x26\x64\x1c\x8b\xae\x57\xda\x42\x1a\x47\x09\x4a\xae\x4a\x21\xeb\xc5\xff\x8c\x92\x49\x1c\x25\x55\xcb\x6a\xf7\xdb\x59\xfa\x51\x86\xfe\x37\x56\x73\x25\xb7\x61\x29\x64\xed\x76\xad\xe8\x30\x89\xe3\x28\xa9\x55\xcb\x64\x5d\x28\x5d\x2f\x6e\x17\x12\xed\x82\x2b\x69\xf1\xd6\x01\xd4\x4a\xd5\x2d\x16\x33\x91\x5a\xf7\xdc\xab\x09\xdb\x0c\x9b\x82\xab\x6e\xd1\x7f\xaa\x17\xa8\xb5\xd2\x86\x4e\x16\x0b\xb8\xa2\x7b\xaf\x51\x6f\x05\xc7\x38\x4a\xc6\xb1\x78\xef\x9c\xbe\x60\xb6\x81\x57\xfb\x3d\x2c\xcc\x96\x2f\x78\x2b\x50\x5a\xfa\x59\x34\x4c\x96\x2d\x92\x7e\x44\x06\xfc\x09\x3c\xa3\xe8\x5d\x89\x1a\x6b\xfb\xbf\xa6\x40\x92\x49\x1c\xf5\x1b\x27\x78\xf1\xd3\x43\xd1\x24\xce\xe2\x78\xcb\x34\x45\xf6\xbf\xb0\x82\x10\xb6\xe2\x82\x69\x83\xef\xa5\x9d\x76\x29\x82\xc5\xba\x6f\x45\xd8\xa2\xe0\x17\xa7\xaa\xeb\x19\x0f\x3b\x3e\x18\xc5\xef\x9a\xf5\x95\xdf\xe9\x37\xc5\x25\xd6\xc2\x58\xd4\xe3\x58\x84\xd0\x14\xe7\xac\xc3\xfd\x9e\xbe\x50\x93\xf5\x6a\x90\xdc\x65\x39\xcd\x60\x8c\x23\x65\x8a\x77\xb7\xc2\xa6\x66\xd8\xf8\xcd\x2c\xde\xc7\xb1\xbd\xeb\x11\x1a\x64\x25\xea\x35\x6a\x81\x06\xae\x6f\xbc\x57\x01\x20\x6d\xe0\x78\x7e\x9e\xc1\x1a\x6d\xba\x65\x6d\x70\x3e\xf3\xfe\x91\x05\xae\xa4\xb1\xa0\xf1\xf3\x20\x34\x96\x17\x4c\x5b\x03\x42\x5a\x58\xc1\x0f\x71\xd4\xbb\xcf\xe5\x17\x77\x3e\x27\xa4\x1c\x92\x65\x92\x3f\x54\xcc\xe2\x48\x54\xd0\xa2\x4c\x9d\x62\x06\x2f\x56\x5f\x20\x8f\x71\x14\x69\xb4\x83\x96\x50\x75\xb6\x78\x47\x5e\x54\x69\xb2\x65\xed\x80\x70\xf4\x19\x38\x93\x52\x59\xd8\x20\x18\xb2\x04\x42\x82\xdd\xa9\x37\xd0\x0d\xc6\x02\x55\x25\x13\x12\x98\x85\x16\x99\xb1\xa0\x24\xc2\xcb\xe5\x4b\xe0\x0d\xd3\x8c\x5b\xd4\x49\x0e\x5b\xd6\x66\x71\xb4\x0f\xbe\x5f\xbf\xbe\x99\x65\xec\x4a\x8b\x6e\xdd\x33\x8e\xe9\xe1\x30\x8b\xa3\xe3\x06\x56\xc0\xfa\x1e\x65\x99\x1e\x37\x39\xb8\xa3\xa2\x28\xb2\xf8\xe0\xa9\x14\x2d\x45\xfd\xa9\xc8\x3a\xf0\x34\x0b\x56\xe8\x8a\xb3\x1b\xae\x7b\x2d\xa4\xad\xd2\xe4\x68\x9b\xe4\x53\x9a\xd2\xe3\xc6\x67\x72\xb1\x80\x90\x5a\xc0\x5b\x61\xac\x01\xab\x80\x71\x0b\xcc\x80\x6d\x10\xc8\xa6\x15\x4a\xb2\xd6\x15\x45\x0e\x9b\xc1\x7a\x8a\x09\x36\xf0\x56\x50\x60\x4a\x24\x4d\x82\x23\x2d\xc6\xed\x10\x34\x40\x48\x63\x91\x95\xa0\x2a\xe0\xac\x6d\xc9\xc3\x50\x54\x50\x0a\x8d\xdc\xb6\x77\x85\xef\x56\x61\xa0\xa4\x88\x92\x07\x6d\xab\x76\x07\xb4\x12\x2b\xd4\x58\x4e\xbe\x38\x1f\x37\xe8\xe0\xb0\xcc\xc1\x08\xc9\x11\x44\x35\xe1\xee\x1a\xd4\x87\xe3\xc9\x08\xa1\x55\x5a\x75\x81\x11\x03\x56\x0e\x92\x4c\xaa\xea\x09\x4b\x06\x2d\x0c\xbd\xa3\xdf\xb9\x1a\x81\xed\xd4\xd0\x96\xf7\x7e\x14\x3e\x3f\x53\xa3\xb8\x22\x1e\xe3\x88\xda\xd9\x27\xcc\x3c\x68\x99\x38\x22\xa6\x2c\x3e\x32\x9d\xfe\x23\x9c\xe7\x90\xf8\x55\x92\x43\xf2\x1f\xb7\x4a\x4d\x16\x6e\x6b\x88\x5d\xa8\x1c\x1b\x04\xab\x99\x34\x9e\x82\x2b\x45\xa1\x32\xc0\x7f\xbb\xfc\x05\x8c\xbd\x6b\x31\x4b\x32\x6f\x35\x8d\x23\xc7\x4c\x6f\xcb\x52\x83\xff\xb7\x02\x67\x34\x94\x4c\x42\xa7\x05\x2b\x4b\x67\xd0\x19\xbd\xba\xba\x00\xda\x40\x63\x28\x28\xac\x2c\xcd\x96\x13\xa0\x23\xc5\xa7\x91\xe8\x74\x42\x5a\xfe\xeb\xe4\x9f\x27\xb4\xa8\x2f\x2f\x4e\x21\x25\xd0\xec\x71\xd4\xec\x40\xd6\x48\x9b\xbc\x15\xd0\x6b\x34\x43\x87\x06\xa4\x02\xe3\x39\x0a\x4a\x61\x38\x4d\xb4\x3b\x30\x77\xc6\x62\x97\x03\x93\x25\xe0\x6d\x8f\xdc\x1a\x18\x0c\x85\xd6\x2a\x87\xd4\x6b\xb5\x15\x25\xfa\x6c\xba\xcc\x3f\x30\x2c\x0f\x98\xa1\xe4\xbc\xb5\x9e\x52\x4a\xe5\xa7\xb1\x6a\x91\xd3\xbc\x15\xd2\xc1\x11\x0c\x79\xb5\x11\x92\xe9\x3b\x67\xd6\xc5\xdf\x6f\x53\x46\xc2\x60\x34\x4b\xb7\xf9\x6a\xca\x8c\x0b\x86\x8b\x91\x71\x48\xa4\xba\x65\x5a\xa8\xc1\x1c\x54\x1d\xf3\xe9\x81\x5b\xa5\x0d\x6c\x94\x6d\xc2\x95\xa0\x51\xc6\x2e\x5d\x7a\x0f\xc4\x11\xc7\xd1\x38\x82\x66\xb2\x46\xf8\xae\x43\xdb\xe4\xf0\x1d\xd3\xb5\xa3\xc6\xe2\xd4\xc1\xbd\xd5\xb5\x29\x7e\x45\xdb\xd0\x02\xf6\xfb\x38\x8a\x2a\x33\x8e\x4e\x7a\xbf\x27\x41\x97\xb0\x73\xdc\xfd\xdc\xb2\x9a\xe8\x38\x19\xc7\x2b\xf5\x8b\xda\xa1\x86\x20\x95\xe4\x5e\x88\xba\xe8\x83\x74\xe4\x98\x91\x65\x94\x25\x3d\x02\xa6\xaa\x1a\xc7\xb9\xd1\xb7\x6d\x4b\x90\x86\x6c\x52\x42\x1d\xc4\x6f\x86\x9e\x0b\x2b\xd7\x31\x7e\x94\x44\x44\x47\x3f\x07\x3a\x52\xa6\x58\xdb\x12\xb5\xce\x21\xf1\xa2\xaa\x82\x23\xb3\xfc\x43\x26\x39\xf5\x31\x01\x5f\x9f\x10\x3d\x7a\xb8\x0b\x52\x3b\xc3\x8a\x0d\xad\x35\x69\xf6\x15\xb4\x3f\x64\xf2\xb5\xe3\xf5\xb0\xe1\xaa\xeb\x98\x2c\x9d\xb1\xcc\xdd\xe6\x1b\x02\xfb\xca\x45\xf6\x49\x78\x80\x23\xe3\xee\xf0\x48\x70\xbd\x2d\x94\xa5\x07\xd9\x4f\xc3\x2a\xdc\x37\x83\x1f\xe1\x07\x1f\xa9\x29\x82\xee\xaa\x81\x6a\x5f\x93\x4e\x08\xaf\x7b\x11\xa4\xd9\x2c\x27\x87\x66\xe9\x37\xc5\x38\xfe\x5b\xd1\x5c\x87\xc7\xa7\x7c\x14\xa1\xf6\x6d\xec\x86\xb0\x4f\x9a\xa8\xe0\x78\x22\x8b\x17\x2b\x48\x12\xe7\x49\x40\xcd\x49\x14\x56\x70\xff\xd0\xa1\x42\x4a\x27\x8d\x7c\x7e\x72\x6a\x6f\x3f\xd2\x3c\x35\x57\x6a\x4d\x43\x2d\xb0\x1b\x8d\x34\x9a\x8c\x80\xad\x71\x74\x7d\x3c\x51\xca\xbd\x3d\xae\xa4\xf4\xc6\x96\x2b\x70\xa4\x72\x26\x58\x9b\x4e\xa2\xb9\xdf\xfc\x5d\xd8\xe6\xbd\x34\xc8\x07\x8d\x69\x36\xdb\xbc\x12\x1d\xaa\xc1\xa6\xf4\xb4\x2c\xd6\xc8\x95\x2c\xc9\x28\x5d\x8f\x40\x5f\xac\x68\x98\x3a\x4b\x4f\xa6\xd0\x95\x3d\xec\x1a\xd1\x12\x85\x30\x37\xb1\x08\x9f\xfa\x55\xa2\xa3\xff\x25\xb8\x69\x8a\x9a\xda\x63\x9e\x1f\x4a\x6a\xe4\xa6\x88\x93\x2e\x4e\x5b\x65\x7c\x0e\xbf\x08\xe4\xfd\x13\xd3\x05\xd2\x5f\x7b\xb6\xf9\x97\x62\xf8\xb5\xa6\x72\xa9\x5d\x12\x8b\x6a\xec\x94\xc5\x89\x06\x4d\x8f\x5c\x54\x02\xcb\x50\xfd\xf3\xe2\x7a\x24\x4c\xcf\xe0\x1f\x6d\x5d\xb5\x87\x48\x3c\x2c\xd4\x50\xdd\xae\x5e\xa9\xbe\xd3\x8c\x2a\xfc\xf5\x04\x7b\x11\x5e\x26\xe7\x0a\x5e\x52\x8b\xa8\xf2\x25\x8d\xcf\xd0\x9e\x07\x2a\x2f\xdf\xb8\x37\x86\x90\x75\x91\x64\xcf\xf5\x06\xb7\xb7\x54\x38\xe1\xcf\x87\xe2\x27\xc6\x3f\xd5\x5a\x0d\xb2\x24\xd9\x4a\x69\x10\x74\x7c\xf2\x06\x04\xfc\xe8\x9c\x0b\x71\xcd\x68\xe7\xfb\x55\x68\x3f\x42\xb9\x07\xa1\xb2\x72\xb9\x48\xb9\xbd\xcd\x0f\xb3\xfc\x5a\xdc\xcc\xd6\xdf\xbb\x97\x1c\x79\x60\x76\xc2\xf2\x06\x66\x97\xbe\x3e\xb9\x21\xd4\x6f\x61\x19\xc7\x31\x9c\x19\x7c\x8c\x46\x96\xae\x78\xef\xa9\x3d\x70\xc1\xdc\xe2\xeb\xe5\x0d\xf5\x34\xd1\x8d\xb3\x53\xfc\xca\xb4\x69\xd8\x44\xd3\xbe\x68\x3f\x0f\x68\xec\xd4\x6c\x87\xbf\x7f\x8a\x09\x38\x3d\x68\x9f\xb2\xb6\xf5\x6e\xb9\x72\x7f\xa4\x97\x9e\x69\xa6\xc3\xc3\xef\xcf\x36\xbe\xac\xa0\x07\xcd\x14\x79\x4f\xb7\x93\x8f\x87\xe1\x7d\xef\xa2\x4b\x49\xb8\xca\xdf\x74\xee\x4f\xe0\xcf\xf9\x16\xcd\xca\xb8\x95\x69\xe2\x13\x09\x97\xde\x1b\x2c\x61\x27\x6c\xb3\x74\x45\xfb\x40\xf0\x89\xb0\x3e\xc0\xf2\x54\x0d\x97\x68\x7a\x25\xcb\xa7\xb1\xb6\xb3\xf9\x4c\xc4\x43\xf3\x71\xf9\x5c\x97\x84\xaf\x93\x78\x1f\xff\x3f\x00\x00\xff\xff\x15\x07\xfa\xb8\x6a\x10\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 4202, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdNameServerMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x51\x6b\xdc\x30\x0c\xc7\x9f\xad\x4f\x21\xfc\x94\x40\x6b\xbf\x0f\xf6\x94\x1b\xa3\xec\x68\x4b\x9b\x6e\xcf\xbe\x44\x71\x4c\x1d\xfb\xb0\x95\xdc\x4a\xc8\x77\x1f\x49\x8e\x71\x83\xc1\xf6\x60\x24\x4b\x3f\xa4\xbf\xfe\x5a\x63\x15\x5b\x42\x4b\x81\x92\x61\x6a\xf1\xf4\x81\x9c\xc6\x9c\x15\x1e\x9e\xf0\xf1\xa9\xc6\x2f\x87\x87\x5a\x81\xd6\xf8\x42\x69\x0c\xc1\x05\xbb\x03\x78\x71\xde\x63\x9c\x28\x5d\x92\x63\x42\xee\x5d\xc6\xce\x79\xda\xe0\xef\x94\xb2\x8b\xe1\x13\xce\xb3\xba\xe6\xcb\x72\xd3\xc0\x83\x61\xba\xed\xae\xff\x65\x01\x38\x9b\xe6\xdd\x58\xc2\xc1\xb8\x00\xe0\x86\x73\x4c\x8c\x05\x08\xd9\x79\x63\x25\x08\x19\xb3\x04\x10\x5a\xe3\xd7\x88\xdf\x1c\x83\x90\xd6\x71\x3f\x9e\x54\x13\x07\x6d\xe3\xfd\xbb\x63\xbd\x3e\x1f\xed\x15\xac\x57\x65\xaf\x94\x26\xd7\x10\x08\x39\xcf\xea\x61\x1b\xfb\x6c\xb8\xc7\xfb\x65\x41\x9d\xa7\x46\x67\x4a\x13\x25\xf9\x2f\x40\x37\xde\x49\x28\x01\xba\x31\x34\x9b\xca\xa2\xc4\x79\xdb\xf3\x76\x6e\x0d\x13\x9a\xb6\x4d\x94\x33\x65\x74\x1d\x72\x4f\x1f\xd8\x9b\x89\xf0\x44\x14\x7e\xdb\xc5\x14\x56\xa7\xd7\x9b\x32\x88\x35\xa8\x67\x93\x32\x15\xe5\x2e\xf9\x18\xad\x5d\x9d\x6e\xe3\xba\x41\x81\x98\x4c\x42\x1f\xad\xa5\x2d\xa8\xe3\x96\x82\x98\x41\x88\x6b\xf9\xf3\xd6\x78\xa4\xcb\x31\xda\x6e\xe0\x9d\x28\x62\x56\xaf\xdc\xc6\x91\xcb\xbf\x90\x55\x0c\x4c\x3f\xb9\xd8\xeb\xa5\xfa\xe1\xb8\x2f\x24\x67\x79\xb7\x11\x07\xea\xcc\xe8\xb9\x76\x03\x65\x36\xc3\xf9\xad\xae\xfe\x7f\x4a\x63\xbc\xa7\xf4\xe7\xa4\x6a\xab\x95\x20\x16\x10\xbb\x9b\xea\x65\x0c\x45\xe3\x9d\xaa\x62\xe8\x9c\xbd\xbb\xde\x58\xc2\x02\xbf\x02\x00\x00\xff\xff\xd9\x1b\xcd\xc8\x9b\x02\x00\x00")

func cmdNameServerMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameServerMainGotemplate,
		"cmd/NAME-server/main.gotemplate",
	)
}

func cmdNameServerMainGotemplate() (*asset, error) {
	bytes, err := cmdNameServerMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-server/main.gotemplate", size: 667, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGotemplate,
		"handlers/handlers.gotemplate",
	)
}

func handlersHandlersGotemplate() (*asset, error) {
	bytes, err := handlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGotemplate,
		"handlers/hooks.gotemplate",
	)
}

func handlersHooksGotemplate() (*asset, error) {
	bytes, err := handlersHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersMiddlewaresGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x41\x0e\x02\x21\x0c\x05\xd0\xbd\xa7\xe8\x9a\x44\x7b\x18\x4f\x40\xec\xb7\x12\x81\x4e\xda\x4e\x66\x41\xb8\xfb\xbc\xb5\xb8\xd0\x1b\x20\xb5\x67\xfa\x19\xc1\x8a\xa9\xf6\x6f\xc9\xbf\x3a\xa5\xc3\x83\x13\xe3\xe8\x35\x11\x3c\x9a\x48\xc7\x55\x1d\xf1\x52\xa3\xaf\x39\x7d\x4c\x40\x85\xf7\x7e\xdc\x01\x00\x00\xff\xff\xcf\x9e\xe9\x81\x4b\x00\x00\x00")

func handlersMiddlewaresGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersMiddlewaresGotemplate,
		"handlers/middlewares.gotemplate",
	)
}

func handlersMiddlewaresGotemplate() (*asset, error) {
	bytes, err := handlersMiddlewaresGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/middlewares.gotemplate", size: 75, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientCliHandlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\x6e\xdb\x30\x0c\x86\xcf\xd6\x53\x10\x85\x51\xc4\x43\x2b\xdf\x03\xec\xd0\x36\x5d\x91\xc3\xda\x22\x0b\x76\x57\x62\xc6\x16\x66\x53\x9e\x44\x37\x2b\x04\xbd\xfb\x20\x45\x4d\xd2\x5d\xb2\x8b\x4d\xf1\xff\xf4\x8b\x22\x55\xd7\xf0\x60\x1a\x84\x16\x09\xad\x62\x6c\x60\xf3\x0e\x6c\x27\xe7\x24\x2c\x5e\xe0\xf9\x65\x0d\x8f\x8b\xe5\x5a\x8a\xba\x86\x15\xda\x89\x48\x53\x7b\x00\x60\xaf\xfb\x1e\xcc\x1b\xda\xbd\xd5\x8c\xc0\x9d\x76\xb0\xd3\x3d\x26\xf8\x27\x5a\xa7\x0d\xcd\xc1\x7b\x99\xe3\x10\xce\x04\x58\x28\xc6\x73\x35\xae\x43\x10\x62\x54\xdb\x5f\xaa\x45\xe8\x14\x35\x3d\x5a\x27\x84\x1e\x46\x63\x19\x66\xa2\x18\x37\x70\xe5\x7d\x29\x5f\xef\x97\x29\xf7\xaa\xb8\x83\xdb\x10\xae\x44\x25\x84\xf7\xb0\xd7\xdc\x41\xc9\x08\xf3\xaf\x20\x43\x10\x85\xf7\x56\x51\x8b\x50\xea\x98\x2a\x19\xe5\x0f\xb4\x6f\x7a\x8b\xf2\x3b\x72\x67\x1a\x17\xa1\xba\x06\xef\x4b\x2d\x9f\xd5\x80\x21\x80\x1e\xc6\x1e\x07\x24\x76\xf0\x01\x8b\x62\x37\xd1\xf6\x9c\x9a\x79\x9f\x0e\xd3\xd4\xe0\x9f\x64\xfc\xd0\x6b\x24\xbe\xb3\xad\x4b\xde\x31\x80\x23\xee\xfd\x93\x89\x11\xc8\x6f\x13\x6d\x59\x1b\x8a\x7a\xcc\x23\x35\x21\x54\x30\xfb\x32\x6e\xe4\x91\x2a\xb5\x5c\xe1\xef\x09\x1d\xaf\xdf\x47\xcc\x1e\x37\x80\xd6\x1a\x5b\x79\x51\x14\xf6\xa0\xc6\x4b\x5d\xdc\x17\x79\xef\x6f\x73\x73\x06\xe4\x2e\x6e\xfb\xaf\xc2\x63\x6f\x45\x51\x9c\xda\x38\x2a\xab\x86\xd4\xca\xe8\x23\x13\x9b\x99\x74\x86\xde\x81\xa2\x06\x66\xe9\x43\x86\xf3\x0e\xb9\x74\xf7\xca\x61\x2c\xaa\xfa\x94\x5f\xe1\x88\xf1\xd5\x55\x9f\xd3\x8f\x34\x0d\x55\xb6\x2d\x4e\xb7\x3b\x88\x79\x4c\x73\xb8\xfe\x57\x79\x32\x77\xb6\x0d\xe1\xe6\x58\x0e\xf6\x0e\xe1\xa2\xcf\x65\x1b\x6a\x4e\x9d\x38\x2d\xb2\x94\xe2\x90\x86\xc2\x93\x25\xb8\xce\xc3\xb9\x01\xd2\xbd\x28\xd2\x2b\x3c\x60\x1f\xff\xbf\x01\x00\x00\xff\xff\x17\x17\xce\xeb\x75\x03\x00\x00")

func svcClientCliHandlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientCliHandlersHandlersGotemplate,
		"svc/client/cli/handlers/handlers.gotemplate",
	)
}

func svcClientCliHandlersHandlersGotemplate() (*asset, error) {
	bytes, err := svcClientCliHandlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/cli/handlers/handlers.gotemplate", size: 885, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\xcd\x6e\xdb\xba\x12\x5e\x4b\x4f\x31\xd7\x08\x2e\xa4\x40\xa1\xf6\xb9\xf0\xa6\x4e\x6f\xd1\x83\xd3\xd4\x48\x83\x9e\x45\x51\x14\x0c\x35\x92\x09\xcb\xa4\x4a\xd2\x4e\x0c\x41\xef\x7e\x30\x24\xe5\xc8\xae\xe3\x76\x61\x58\xe4\x7c\xf3\xfb\x0d\x39\x2c\x4b\x58\xe8\x0a\xa1\x41\x85\x86\x3b\xac\xe0\x69\x0f\xce\x6c\xad\x65\x70\xf7\x19\xee\x3f\x3f\xc2\xfb\xbb\x8f\x8f\x2c\x2d\x4b\x78\x40\xb3\x55\x4a\xaa\x26\x00\xe0\x59\xb6\x2d\xe8\x1d\x9a\x67\x23\x1d\x82\x5b\x49\x0b\xb5\x6c\xd1\x83\xbf\xa2\xb1\x52\xab\x5b\xe8\x7b\x16\xbf\x87\x61\x22\x80\x3b\xee\x70\x2a\xa5\xf5\x30\xa4\x04\x59\x72\xb1\xe6\x0d\x42\x63\x3a\x01\x9d\xd1\x3b\x59\xa1\x05\x0e\xcd\xc3\x72\x01\xa2\x95\xa8\x1c\xd4\xda\x80\x5b\x21\x19\xf8\x82\x66\x27\x05\xb2\x7b\xbe\xc1\x61\x00\x1b\x97\x69\x37\x31\x93\xa6\x72\xd3\x69\xe3\x20\x4b\x93\xb2\x9c\x35\xba\xe5\xaa\x61\xda\x34\xe5\x4b\xa9\xd0\x95\x42\x2b\x87\x2f\x6e\x96\x26\xb3\xc9\x67\xa3\x75\xd3\x22\x9b\xa0\xc9\xd6\xdb\x92\x72\x83\x8e\x57\xdc\x71\x0f\x91\x6e\xb5\x7d\x62\x42\x6f\xca\x6e\xdd\x94\x68\x8c\x36\x76\x96\x1e\x4b\x1a\x7d\xb3\x96\xae\xa4\x1f\xaa\xaa\xd3\x52\x91\x63\xb2\xe5\x0c\x57\xd6\x87\xfc\x06\xfe\x00\x88\x41\x51\x62\xf0\x48\x24\xc4\x82\xa4\xc9\xac\xef\xd9\x47\x9f\xf7\x92\xbb\x15\xdc\x0c\x03\x94\x76\x47\x09\x74\x4f\x40\xc2\xe5\xbb\x63\xf1\x2c\xcd\x3d\x03\xf7\xf8\x0c\x06\xdd\xd6\x28\x0b\x5c\x8d\x25\x85\x27\x2e\xd6\xa1\x45\x8e\xc9\x10\x5a\x29\x14\x4e\x6a\xc5\xe0\xa3\x03\x69\x89\x1a\xb2\x63\xd0\x76\x5a\x59\xf9\x24\x5b\xe9\xf6\xa0\x6b\xcf\x99\xe0\x6d\x8b\x06\x9c\x86\x4a\xf2\xb6\x00\xae\x2a\x68\xb9\x43\x03\xa2\xd5\x16\x8b\x00\x7a\xb5\x99\xd6\x5b\x25\x28\xa6\x8c\x36\xe1\x9a\xf2\x65\x0b\xef\x7a\xa1\x95\x2a\x40\x77\x84\xb3\xc0\x58\xdc\xfe\xec\x37\x72\xc8\xba\x27\xd6\xf7\x1f\x34\xb5\x06\x9c\x34\x0a\xad\xd0\x14\xe0\x89\xc9\xa1\x4f\x93\x1d\x37\x20\x44\x4c\x6a\xa1\x55\x2d\x9b\x34\x4d\xa8\xd3\x7e\x14\x50\xc3\xed\x1c\x0c\x57\x0d\x1e\xdc\xf5\x69\x92\xa0\x31\x24\xa8\xb3\xff\x0a\x91\xa7\x49\x22\x6b\x32\x08\xff\x99\x83\x92\xad\x47\x24\xa1\x90\xb4\x8e\xce\x2c\xfb\xc7\xf0\x2e\x43\x63\x0a\x98\x09\xae\x94\x76\xc0\xbb\xae\xdd\x47\xcb\x33\x32\x34\xa4\xc9\x90\xa6\x89\x98\xe4\x63\xc9\xd3\xb7\xef\x47\xdd\x71\x94\x30\xb9\x3b\x27\x7d\x87\xb5\x36\x98\x51\x30\xb1\xbb\xbf\xf2\x76\x8b\xf6\x51\x7f\x78\x58\x2e\x3e\xc5\xa6\xcd\x84\x60\x2b\xe4\x15\x1a\x9b\xe7\x05\xb9\x4f\xfa\xfe\x06\x9e\xa5\x5b\xc1\x95\x43\x72\xce\x86\x21\x4d\x26\xbb\xdd\xba\xf1\xa5\xbd\x9d\x13\x82\xc5\x83\x1b\xea\x4b\xde\x08\x19\x6a\x76\x25\x47\xd0\xc8\xc2\x27\x74\x2b\x5d\xd9\x00\xf4\xb5\xef\xfb\x47\xfd\xb7\x7e\x46\x03\x57\x32\x92\xf4\x3e\x1e\x0a\x18\x4f\x07\x1b\x77\xbc\x96\xaf\x2f\xb9\x79\x5b\x71\x0e\xc7\x15\xb9\xc7\xe7\x50\x94\x2c\xe8\x52\x45\x54\x11\xbf\x67\x7d\x3f\xe6\x34\x0c\xac\xef\xa7\xf1\x86\xcd\xd9\x14\x2a\x4f\x37\xdf\x2b\xa1\x2b\xa4\xa2\x4e\xa4\x0f\xf8\x73\x8b\xd6\x8d\x98\x3b\x3c\x8b\xf1\x07\x05\x47\xd0\xb4\x6f\xaf\x24\x1b\xc5\x8f\xfb\x6e\x0c\xa4\x1f\x46\xec\x51\x8b\x30\xc6\xe2\x7e\x7e\x28\x55\x96\xfb\x9d\xc8\x08\xaa\x2a\xb2\x18\xbf\xc6\x8f\x74\xec\x54\xbb\x13\x07\x5d\xdb\x13\x60\xca\xe1\x29\x81\x74\x6f\x78\x73\xbf\xd4\xfe\x16\x00\x2e\x91\x5a\xbc\xfa\x4e\x86\x82\x0e\x48\x1a\x06\x00\x15\x07\x02\x4b\x10\xca\x95\x5e\x8e\x21\x8c\x96\x8b\x95\xa5\x5b\x89\xc3\xf1\xa5\xc9\x82\xc6\x08\xf9\x3f\x5d\x33\x6e\xc5\xfd\x85\xb6\x43\xe3\x2c\x70\xb2\xeb\xaf\xba\x33\x79\x80\x41\x3a\xb4\x4e\x03\x87\xad\x45\x73\x53\xe9\x0d\x97\xea\x0d\x68\xf0\xc1\x60\x69\xe4\x86\x1b\xd9\xee\x49\xa7\xde\xb6\x20\x15\xf0\x78\xe9\xc4\xab\xee\x62\x22\xd9\x0f\x88\x87\x98\x2d\xc2\x7f\xe1\x5b\xfc\xc1\x07\x23\x95\x43\x53\x73\x81\xfd\x90\x43\x36\x59\x4d\x2f\xba\x10\xf7\xed\xfc\x55\x8f\x65\xd7\xbf\x6f\xb9\xfc\xd0\x21\xde\xc0\xc8\xd8\xa1\x7f\x4e\x98\x0b\x87\xe1\x8f\x98\xbb\x74\x6e\xce\x12\x17\x14\x22\xe2\x2d\xde\x7e\xcf\x49\x70\xe0\x09\xbc\x40\xb2\x47\xfd\x11\x71\x97\xf2\x38\xc7\xdb\x18\xc1\x1f\xb2\xf6\xd3\xcf\xa0\x18\xcf\x19\xc6\xbc\xe0\x0d\xc2\x7e\xfe\x42\x57\xea\xf6\x1d\x1e\x4d\x3b\xb0\xce\x6c\x85\x23\x67\x71\x10\xc0\xb7\xef\xd6\x19\xa9\x9a\x78\x32\xa7\xd3\x26\x10\x43\x79\xfb\x95\x27\x60\xa3\x2b\x59\x4b\xb4\x61\x84\x1f\x5e\x07\x34\x49\xbd\xb7\x23\x7d\x52\xcd\xae\xa7\x01\xe4\x21\xdd\x34\x54\x73\xe1\x5e\xc6\x39\xf5\x05\x55\x95\xad\x71\xef\x67\x7c\x88\x28\x3f\x36\xd6\x1f\x72\xf5\x66\x35\x9c\x33\xec\x07\xb2\x1e\xa7\x1c\xcc\x81\x4c\xa6\xd3\x11\x4d\x63\x6f\x88\xfe\x2f\xcd\x4a\x1f\xcb\x58\x9c\xfc\x64\xc6\x4c\xfb\xf2\x24\x2e\xe1\x5e\x7e\x6d\x83\x4d\x05\xd7\xe3\xd3\x91\x7d\xba\xcb\x4f\x11\x3e\x6c\x9a\x90\x1d\x97\x53\x4e\x92\xf1\x71\xb2\x7e\x7d\x9c\xf8\xc0\xfc\x5c\x94\x35\xec\x0a\xd0\x5e\x26\xdc\x0b\xf3\x79\x64\xeb\x9c\x65\x31\xea\xff\x91\x30\x8c\xd0\x60\x78\x4e\xcf\x10\xaa\xb4\x5f\x16\xb0\x2e\x60\xe7\x67\xc7\xe0\x1f\x24\xe1\x79\x13\xa0\xd3\x07\xce\xf5\xa6\x82\x39\x1c\x12\xf8\x4b\x4b\x95\x5d\x6f\xaa\xe2\x75\x6b\x49\x3a\xc1\x2a\x63\x2c\xcf\x47\x73\xb1\x32\xc2\xbd\x84\xba\xff\x1b\x00\x00\xff\xff\x25\xaa\x5b\x07\x8f\x0c\x00\x00")

func svcClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGotemplate,
		"svc/client/grpc/client.gotemplate",
	)
}

func svcClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := svcClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.gotemplate", size: 3215, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func svcClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGotemplate,
		"svc/client/http/client.gotemplate",
	)
}

func svcClientHttpClientGotemplate() (*asset, error) {
	bytes, err := svcClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.gotemplate", size: 105, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4d\x8f\xdb\x38\x12\x3d\x4b\xbf\xa2\x62\xf4\xa2\xed\x40\x4d\xdf\x3b\xe8\xc3\x6e\xd2\xbb\xdb\xc0\xe6\x03\xe9\xde\xdd\x43\x10\x04\xb4\x54\x96\x88\xa6\x48\x86\xa4\xfc\x31\x82\xfe\xfb\xa0\x48\x49\x96\x63\x25\x93\x99\xe3\x60\x0e\x8d\xb6\xf9\xf1\x58\xf5\x5e\xd5\x23\xbd\x5e\xc3\x6b\x5d\x20\x94\xa8\xd0\x72\x8f\x05\x6c\x8e\xe0\x6d\xe3\x1c\x83\x37\xef\xe1\xdd\xfb\x27\xb8\x7f\xf3\xf0\xc4\xd2\xf5\x1a\x3e\xa2\x6d\x94\x12\xaa\x8c\x0b\x60\x2f\xa4\x04\xbd\x43\xbb\xb7\xc2\x23\xf8\x4a\x38\xd8\x0a\x89\x61\xf1\xff\xd0\x3a\xa1\xd5\x2d\xb4\x2d\xeb\x3f\x77\xdd\x64\x02\xde\x70\x8f\xd3\x59\xfa\xde\x75\x69\x6a\x78\xfe\xcc\x4b\x04\xb7\xcb\x53\x5a\xff\x34\xc0\x42\xae\x95\xe7\x42\x39\xa8\xd1\x57\xba\x70\xe0\x35\xd4\xfc\x19\x41\xa8\x42\xec\x44\xd1\x70\x09\xa8\x0a\xa3\x85\xf2\x0e\xb6\x56\xd7\xe0\xd0\xee\x44\x8e\x2e\x23\x24\x8b\x5f\x1b\x74\x1e\xb8\x2a\xc0\xa2\x33\x5a\x39\x04\x7f\x34\x18\x90\x68\x29\x25\xa1\x1d\x9e\x50\x32\xe0\x0e\xf6\x28\x25\xfd\x47\x95\xeb\x02\xad\x23\x00\xc2\x2b\xb0\xff\xbe\xd5\xb6\xdf\x18\xd0\xb2\x30\xc0\x89\x9c\x2d\xe8\xc6\x82\x6b\x8c\xd1\x96\xc8\xf5\x96\x2b\x47\x9f\xe9\x38\xc1\xa5\xf8\x85\x7b\xa1\x15\xa1\x6d\xb5\xad\xb9\x77\x2c\x4d\x45\x1d\x56\x2c\xd3\x64\xb1\xad\xfd\x22\x4d\xd6\xeb\x45\xa9\x25\x57\x25\xd3\xb6\x5c\x1f\xd6\x0a\xfd\x9a\xc8\xc0\x03\xcd\x2e\xc6\x8f\x69\xb2\x28\x85\xaf\x9a\x0d\xcb\x75\xbd\x2e\xf5\xcd\xb3\xf0\x6b\xfa\x1b\xf2\xa1\x25\x66\x03\x8b\xb6\x65\x1f\xfe\xf1\x10\x8e\xf9\xc0\x7d\x05\x37\x5d\xb7\x48\x57\x81\xee\xfb\x91\xc0\x5c\x4b\x89\xb9\x77\x43\x26\xbe\x9a\x10\x03\xbe\xe2\x1e\x72\x5d\x1b\x4a\x9b\x2b\xe0\x45\x31\xb0\xcd\xe0\xc1\x5f\x3b\x02\xab\x91\x2b\x4f\xe4\x6e\x10\x1a\x87\x05\xb1\xc8\xa1\x42\x69\xd0\x82\xf3\xb6\xc9\x7d\x46\xd3\xfd\x51\xf3\x27\x09\xe5\x35\x70\x82\x73\x42\x95\x12\xc1\x70\xcb\x6b\xf4\x68\xa9\xd0\x68\xfc\x41\x01\x8f\xfa\xd9\x0c\x84\xbf\x76\x74\xd8\xb6\x91\x41\x87\x6d\xa3\x72\xe2\xb8\x0f\x59\x21\xc9\xa0\x41\x9b\x50\xef\xa0\x69\xaf\x41\x7b\x33\x1c\x48\x80\x1b\xee\x84\x63\xf0\x4f\x6d\x01\x0f\xbc\x36\x12\x33\x38\xea\x06\x6a\x51\x56\x1e\x0c\x77\x54\x03\x13\xaa\x28\xc0\xf1\xa0\x78\x8e\xb1\xba\x68\x72\x0c\x34\x70\x05\x95\xf7\x86\xfd\x9b\xab\x42\x52\x8c\x7b\xe1\x2b\x40\x9e\x57\x7d\x29\xc3\x72\x38\x7d\x05\x7b\x61\xb1\x80\xc6\x44\x50\x67\x30\x17\x5b\x91\x83\xe1\xbe\x62\xb0\x7c\x08\xf1\x09\x47\xf8\x1b\xbe\x91\x47\xe0\x50\x0b\xe7\x63\x1b\x40\x81\x4e\x94\x8a\xb6\x0a\xb5\xd3\xcf\x18\xa8\x7c\x8c\xb2\x8c\x6d\x13\x42\xc4\x73\xb1\xa3\x18\x04\x31\x30\xc9\x56\x53\x76\x73\x29\x50\xf9\x73\x76\x27\xc2\x9d\x3a\x50\x1e\xa9\x4f\x23\x1c\x16\x3f\x92\x91\x7a\x25\x72\x25\x88\xe1\x1a\x63\x59\x9d\xe2\x15\xca\xa3\xdd\x72\x2a\xa8\x79\x25\x08\x6c\x3c\x6c\xde\x05\x1a\x17\xfd\xaa\x6f\xbb\x75\xd0\xe1\x1d\xee\x5f\xf7\xf9\xe4\xba\xde\x08\x15\x78\xaa\xfb\x10\x27\xc2\x66\xbd\x57\xf8\xc6\x2a\x10\xa1\x92\x29\xc0\x9c\x4b\x89\x36\x16\x73\x1f\x2c\x4b\x43\x3a\x17\x84\xb6\x69\xdb\x5a\xae\x4a\x84\x2b\x01\xb7\x77\xc0\x86\xf5\x6f\xa3\x18\x5d\x97\x26\x6d\x7b\x25\xd8\x3b\x5e\x63\xd7\x0d\xfb\x01\x60\x4c\x82\x0d\x83\x69\xdb\xde\xd0\x68\xd7\xa5\xdd\x79\xaf\xfe\xc4\x21\x54\x9d\xb0\x9c\x44\xb8\x82\xc9\xb9\xcb\xdc\x1f\xa0\xf7\x11\xf6\x3a\xfe\xcf\xa8\x1a\x5e\x9a\x0d\x6b\xdb\x7f\x69\x5a\x06\x57\x82\x7d\x8c\x1e\xfa\x74\x34\xd8\x6f\x5d\xc1\xf2\x72\x51\x34\xd7\xc9\xaa\x0c\xd0\x5a\x6d\x57\xd0\xa6\x49\x32\x98\x6f\x18\xa4\x80\x91\xcd\x70\x40\x31\x51\x0c\xab\x34\x49\xc4\x36\x2c\x7d\x71\x07\x4a\xc8\x80\x91\xf4\xaa\x28\x21\x03\x4c\x9a\x24\x5d\x3a\x8e\x0e\x27\xb0\x9f\x89\x6d\x95\x11\x4a\x9a\x74\x69\xdb\x46\x7a\x89\xdc\xb7\xd4\x52\x53\x86\x43\xd3\x5e\x79\x0c\x0c\x47\xdd\xa6\xa4\x5f\x79\x9c\xe3\x3d\x12\x4f\x60\x73\x29\x3a\x08\xe1\x4d\xf7\xc6\x15\x8f\xa1\x07\x57\x97\x45\x70\x96\x3c\x61\xcf\x4b\x37\xdc\x75\x63\x0f\xb5\x24\xd4\x78\xeb\x4d\x86\xa3\x08\x13\x75\x08\xfd\x2b\x65\xd4\x63\xcc\x71\x78\x51\x04\x61\xdf\x6e\x14\xd4\xb1\x6f\x8a\x2b\x44\x14\x57\xcd\x68\x39\xa7\x66\xd4\x73\x9c\xd9\xf5\x22\xc5\xe1\xc0\x7e\xd4\x6a\xaa\xd9\xff\x2d\x37\x7f\x97\xf2\xfe\x90\xa3\xf1\xb0\xb7\xdc\xb8\x68\xb3\x23\x7b\x5b\x81\xb2\xa0\x3b\xa6\xef\xcf\x53\xc3\x06\x79\x83\x3f\xcd\x5c\x9c\xec\xad\x28\x0a\x89\x7b\x6e\xe3\xeb\xe6\xbf\x6e\x78\xef\xd0\x4d\x6f\x8c\x3c\x92\xcd\x90\x75\x7a\x02\xaf\xc7\xd5\xe1\x6e\xc0\x1d\xda\xe3\x28\x25\xb5\x15\xb9\xc8\x70\x5b\x12\xde\x7b\x43\x37\x07\xb9\x67\x36\x31\xaf\x9c\x2b\xba\x39\xe9\xbe\xc1\x82\xb6\x6d\x8e\xa0\x48\x83\x78\xa3\xe2\x21\x97\x4d\x81\x45\x7c\xea\x6c\x90\x42\xa0\x9c\x0d\x16\xec\x82\x8d\xe5\x29\xa6\x0c\x16\x8f\x9e\xfb\xc6\x2d\x32\x58\x7c\x10\xaa\x5c\xac\xd2\xc1\x1e\x5e\x4e\xfc\xe1\x7b\xfb\x61\x86\x95\xec\x14\x0d\x63\xcc\x79\x2b\x54\x19\xca\x49\xa8\x7e\xf8\xf6\x0e\x6a\x6e\x3e\xc5\xa9\xcf\x91\xfe\xb6\x23\xf9\xc9\xd6\x7e\xcb\xbe\x92\x64\x31\xa9\xa8\xc5\x2d\x8c\x00\x5d\xd6\x43\xc4\x32\x48\xba\x34\x4d\x48\x95\x2f\x14\x52\x28\xe3\x00\x3d\x86\xd7\x46\x3b\xf9\x92\x81\x7e\xa6\xe9\x21\xc0\x4f\x78\xf8\xfc\x0a\x5e\xe8\xe7\x58\x92\x86\x2b\x91\x2f\xb7\xb5\x67\x8f\xc6\x0a\xe5\xb7\xcb\xc5\xfd\x00\x31\x2a\x79\xfd\x37\x77\x0d\x85\x46\x07\x4a\x7b\xc0\x83\x70\xfe\x15\x38\xc4\x69\x01\x8c\x35\xe4\x58\xa9\x17\x14\xd4\x6a\xd5\x9b\x55\x81\x12\x3d\x2e\x87\x08\xc2\xdc\x29\x01\xa1\xf2\x0c\xbe\x9c\x32\x18\x99\xfc\x79\xce\xc4\x96\x76\xc1\xdd\x1d\x9c\xb1\xd7\x37\xdd\xac\xeb\xc2\xdd\x24\xf8\xe5\xec\x92\xd5\xd0\x85\x67\xac\xc7\x0e\xfc\x0f\xdf\xa0\xc4\xe2\x54\x18\xf1\x57\x42\x89\x7e\x28\xe3\xe9\xe3\x2e\x56\xf3\xbe\x42\x35\xce\xea\x49\xe5\xf6\x60\xb1\x00\xb3\xd8\x70\x7d\x4f\x34\x71\x31\xc4\x9f\x1e\x3c\xfe\x7e\x11\x39\xbd\x71\xac\xc8\xe3\xe3\x73\x12\x43\x25\xf2\x2a\x6c\x75\xa8\xe6\x42\xe8\x2f\xf6\x7e\xf7\xf0\xac\xd1\xb6\xbf\xd6\x2f\xb3\x0a\xce\x1b\x6b\x39\xbb\x34\xe9\x19\xdf\x4e\xbf\x97\xd7\x1f\xb6\xa9\x8b\xa0\xb2\x3e\xcf\xc0\xb8\xc5\x1c\xc5\x2e\x3e\x00\x43\x8a\xdf\xbc\xab\x19\x3c\x22\x8e\x30\x13\x94\x30\x31\xbc\x4b\x47\x0b\xa0\x40\xa9\x28\x0b\xf4\x5c\xc8\xf0\x86\x1c\x3a\x2a\xfc\x78\xe9\xdf\xbe\x5c\x0a\x7f\x64\x3f\x72\x93\xb3\xdc\xa7\xa6\xf2\xbb\x19\xfd\xcb\x72\xfe\x94\x96\x73\xb6\x2d\x9b\x7f\x1a\x7e\xcf\x81\x7e\x0d\x00\x00\xff\xff\x12\x2d\xc7\x61\xce\x10\x00\x00")

func svcEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGotemplate,
		"svc/endpoints.gotemplate",
	)
}

func svcEndpointsGotemplate() (*asset, error) {
	bytes, err := svcEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.gotemplate", size: 4302, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcServerCliCliGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcd\x6e\xdb\x3a\x10\x85\xd7\xe2\x53\xcc\x25\x70\x0b\x09\x70\xa9\x2c\x9a\x2e\x5c\x78\x91\x46\x6e\x9a\x4d\x2c\x38\x8e\xb7\x05\x2d\x8d\xe4\x41\x65\x52\x20\x69\x05\xa9\xa1\x77\x2f\x48\x59\x85\x5a\xa7\x48\x57\x1a\x62\xce\x7c\xf3\x73\x94\xa6\x70\xab\x4b\x84\x1a\x15\x1a\xe9\xb0\x84\xdd\x0b\x38\x73\xb4\x56\x40\xb6\x82\x87\xd5\x06\x96\xd9\xfd\x46\xb0\x34\x85\x35\x9a\xa3\x52\xa4\xea\x41\x00\xcf\xd4\x34\xa0\x3b\x34\xcf\x86\x1c\x82\xdb\x93\x85\x8a\x1a\x0c\xe2\x2d\x1a\x4b\x5a\xcd\xe1\x74\x12\xe7\xb8\xef\x27\x09\xc8\xa4\xc3\x69\xd6\xbf\xfb\x9e\xb1\x56\x16\xdf\x65\x8d\x50\x34\xc4\x18\x1d\x5a\x6d\x1c\xc4\x2c\xe2\xd5\xc1\x71\xff\x69\x64\xed\xbf\xda\x72\xc6\x22\x7e\x3a\x89\xfb\xa0\xc9\xa5\xdb\xc3\xfb\xbe\x87\xd4\x76\x45\x6a\xd1\x74\x68\x38\x4b\x18\x0b\x1b\xaa\x8a\xea\x61\xde\x1d\x42\xab\xdb\x63\x33\xee\xba\x7c\xd8\x42\x27\x8d\x05\xad\x80\x14\x39\x6a\xe8\x87\x74\xa4\x95\x2f\xf4\xcd\x2e\xf6\xfc\x55\x41\x6a\x24\x6b\x15\xa4\x22\x97\xc6\x62\x9c\xb0\x4e\x9a\x31\x35\x4c\x22\x86\x17\x63\xd5\x51\x15\xa1\x4f\x9c\xc0\x89\x45\xa1\xea\xd1\x19\x52\xf5\x56\x9a\xf8\xdd\x20\x13\x19\xee\x8e\xf5\x4d\x59\x9a\x19\xf0\xd2\xc7\x42\x96\xa5\xe1\x33\xe0\xf3\xeb\xab\x8f\x57\x3e\x08\x12\x90\xaa\x84\x03\x3a\x43\x85\x85\x86\xac\x43\x05\x5e\x89\xd6\xf2\xe4\xaf\xf4\xaf\x9b\x4d\x7e\x86\xef\x9d\x6b\xa7\xec\xeb\xc0\xf6\x82\x7f\xc7\xdd\xad\xf3\xdb\x33\xae\x36\x6d\x31\xc5\x7d\x08\xb8\x7a\x9d\xdf\x42\xec\xa1\xc9\x25\x95\x45\x69\x0a\x4f\x16\x01\x55\x47\x46\xab\x03\x2a\xe7\xcf\x4b\x72\xd7\xa0\x9d\x01\x55\x60\xd1\x09\xf8\x12\xac\xd8\xcb\x0e\xa1\x35\xa4\x0d\xb9\x97\xe0\x09\x2c\x55\x17\xec\x10\x2c\xa2\x2a\x80\x61\xbe\x00\x6d\xc5\x1d\x3a\x54\x5d\xcc\xb3\xe5\xe7\xa7\xbb\x6f\x37\x59\xb6\xe6\xc9\xa7\x41\xf0\xdf\x02\x38\xf7\xf7\x8f\xfe\x3c\x38\x2c\x82\x82\x45\x7d\xc0\x85\xbf\xef\x77\x5c\xbe\x5a\x6f\x3c\x28\xa4\x2e\x40\xe3\x6d\x61\x01\xd5\xc1\x89\xc7\xd6\x90\x72\x55\xcc\xe7\xff\x5b\x3e\x0b\x35\xc9\xc8\x7e\x65\x54\x5f\xfd\xc6\xa4\x93\x06\xd3\x41\x5f\x81\x79\x5f\xde\x80\x8d\xd6\x4d\x60\x3d\xfb\x19\x00\x00\xff\xff\xe0\x4d\x14\x8b\x13\x04\x00\x00")

func svcServerCliCliGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerCliCliGotemplate,
		"svc/server/cli/cli.gotemplate",
	)
}

func svcServerCliCliGotemplate() (*asset, error) {
	bytes, err := svcServerCliCliGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/cli/cli.gotemplate", size: 1043, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcServerRunGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4f\x6f\xdb\xb8\x13\x3d\x93\x9f\x62\x2a\xf4\x20\x03\x8e\x74\xf8\xdd\x82\xe6\xd0\x26\xfd\xb5\xc1\x36\xa9\xe1\x18\xdb\x33\x2d\x8e\x29\x22\x32\xa9\x25\x29\xdb\x81\xe0\xef\xbe\x18\xea\x8f\xe5\xa6\x31\xba\x40\x0f\xad\x45\xce\xe3\x70\xe6\xcd\xcc\x63\xf2\x1c\x6e\xad\x44\x50\x68\xd0\x89\x80\x12\xd6\x2f\x10\x5c\xe3\x7d\x06\x77\xdf\xe1\xf1\xfb\x0a\x3e\xdf\xdd\xaf\x32\x9e\xe7\xb0\x44\xd7\x18\xa3\x8d\xea\x00\xb0\xd7\x55\x05\x76\x87\x6e\xef\x74\x40\x08\xa5\xf6\xb0\xd1\x15\x46\xf0\xdf\xe8\xbc\xb6\xe6\x1a\xda\x36\xeb\xbf\x8f\xc7\x89\x01\xee\x44\xc0\xa9\x95\xd6\xc7\x23\xe7\xb5\x28\x9e\x85\x42\xf0\xe8\x76\xe8\x38\xd7\xdb\xda\xba\x00\x29\x67\x89\xc1\x90\x74\x3f\x79\x19\x42\x3d\xfd\xce\xeb\xda\xd9\x4d\xc2\x39\xcb\x73\xf8\x9f\x84\x85\x70\xe1\x85\xb3\x44\xd9\x4a\x18\x95\x59\xa7\xf2\x43\x4e\xe0\xc2\x9a\x80\x87\xe8\x47\x59\xab\x2a\xcc\x26\x10\xe5\xea\xa2\xf7\xf1\xc5\xc2\x5f\x3a\x10\x4a\x87\xb2\x59\x67\x85\xdd\xe6\xca\x5e\x3d\xeb\x90\xd3\xbf\xca\xaa\x1e\xb8\xa2\xb4\x9f\xd0\xed\x74\x81\x9c\xd5\x6b\x48\xda\x36\x5b\x7c\xba\x8f\x61\x2f\x44\x28\xe1\xea\x78\xa4\xeb\xda\x36\x3b\xdf\x84\xdc\xef\x8a\x37\x2c\xa5\x30\xb2\x42\xe7\x13\x3e\xe3\x3c\x16\xc9\x6c\xb4\x02\x8a\x5e\x68\xe3\x21\x94\x08\x0e\xff\x69\xb4\x43\x09\x1b\x8d\x95\xf4\xb0\xb1\x0e\x86\x0a\x89\x81\xbf\xf0\x52\xe3\x70\xda\x07\xd7\x14\x01\x5a\xce\xbe\xae\x56\x8b\x8f\x52\x3a\xda\xd2\x46\x71\x76\x87\xeb\x46\x9d\xed\x7c\x59\x2e\x6e\xa7\x1b\x47\xce\x37\x8d\x29\xe0\x11\xf7\x9f\x8d\xac\xad\x36\xc1\xa7\x33\xf0\xbb\x22\x1b\xd7\xe4\x3a\xcf\xe1\x53\xe3\xb5\x41\xef\x41\xda\xad\xd0\x26\xe3\x6c\x27\x5c\x0c\x48\x17\x08\xf5\x3a\x6b\xdb\x2f\xf6\x51\x6c\x11\xb2\x9e\xb8\x8c\x56\xc7\xe3\x53\x17\x33\x6b\x39\x63\x03\xfc\x06\x06\x2e\xb2\x47\xdc\xf7\xf8\x74\xc6\x19\xdd\xf4\xc3\x89\x7a\x20\x1f\xf6\x3a\x94\xb0\xd5\x52\x56\xb8\x17\x0e\x7d\x06\x4f\x88\xe3\xe9\x7c\x6a\x51\xf6\xd7\x37\x90\xbf\xe1\x8a\xde\x3c\xe3\xec\xd8\x55\x7a\x48\xf3\x3c\xad\x94\xb3\xb6\x75\xc2\x28\x84\xf7\x1a\xae\x6f\x4e\x39\x3d\x60\x28\xad\xf4\x54\x50\xce\x58\xdb\xae\xec\x37\xbb\x47\x07\xef\x75\x9f\xee\xe8\xf0\x26\xd2\xf8\x20\x9e\xb1\x6d\x5f\x59\x27\x81\xb4\x2d\x1a\x49\xde\x66\x9c\x33\x1c\x59\xbf\xbe\x39\x2f\x43\xfb\xdb\x21\xbd\xba\xec\x1a\x00\xe0\x42\xa8\xf3\x49\x10\x3d\x2d\xb1\x06\x1e\x2b\x2c\x48\x3e\x4e\xbd\xf0\x1f\xcb\x71\x4a\xe7\xa7\x7a\x9c\xba\x6d\x84\x50\xfa\x0e\x43\xe3\x0c\x8c\x7b\xd4\xa0\x24\x52\x8d\x01\x1f\x84\x0b\x1e\x04\x18\xdc\x03\xa9\x43\x3f\x0c\x73\x50\xcb\xc5\xed\xb8\x10\x46\x82\x00\x49\x9d\xdf\xef\x75\x31\x87\x12\xc9\x53\x2d\xbc\x47\x49\x23\x47\xb3\x43\xe0\xca\x2a\x85\xae\x1b\x83\x65\x63\xd2\x62\xa3\xfa\xd1\x9a\xf7\x36\xfa\xc9\xbe\xc5\xcf\x19\x0d\x43\xb7\x4b\x3b\x69\xb2\xf5\x2a\x99\x43\x52\x62\x55\xd9\x64\xc6\x99\xc4\x4d\x77\xe0\x67\x84\xb2\x56\xae\x5f\x30\x79\x55\xe4\xf3\xd1\xeb\xd8\x7f\xc0\xa2\x14\x46\x17\xa2\x3a\xb5\x25\x3a\x57\x10\x7e\x2b\x9e\x31\x25\x33\xa0\x73\xd6\xcd\x38\x2b\xc2\x81\x0c\xbd\x08\x66\x9f\x44\xf1\xac\x9c\x6d\x8c\x1c\xdc\xdd\x9b\x80\xce\x35\x75\x18\x6a\x90\x71\xa6\xec\xa9\x20\xa3\xfd\x6b\xb7\x93\xd2\x5d\xfd\xd9\xa8\x21\x50\x69\x1f\xe8\x31\xe9\x0e\x12\x57\x69\xa4\xa2\xe7\x82\xae\x27\x92\x1e\x71\x7f\xdb\x45\x91\x76\x86\x59\xf6\x43\x87\x32\x4d\x82\x13\xc6\x93\x18\x12\x15\xb1\x38\x91\x08\xb6\xa5\x93\x54\xcc\x41\x06\xf0\xa1\x39\x44\x1d\xd8\x66\x5d\x30\x69\x92\x47\x7c\xf7\x16\xe4\xc9\xbc\x83\xf7\x91\xfe\x9f\x22\x89\x96\xec\xde\x48\x3c\xcc\x2e\x1c\x2d\xb6\xb2\xd2\x06\xdf\xf6\x70\xdb\x01\x2e\xf9\xa0\xff\x74\x75\xc1\xc7\xa2\x03\x5c\xf2\xe1\x5f\xb6\x6b\x5b\xbd\xed\xe2\x29\xda\x2f\x79\x08\x4e\x14\x17\x62\x58\x91\x79\x16\xf9\x9d\x36\xa2\x90\xd2\x25\x73\x28\x36\x2a\x1b\x1f\x06\xba\x24\x36\xd6\x87\xab\xce\xdb\xb7\x58\xe8\x8f\x46\xc6\x62\xa4\x67\xe0\x39\x6c\x49\x37\x87\xae\xa2\xe7\x06\xc6\xc2\xfe\x91\xce\x20\x97\x34\x45\xac\x1c\xe4\x8f\xe4\x93\x76\x87\xce\x2c\xc2\x61\x7e\x92\x87\x61\x42\x67\x6f\xa7\x3a\x3c\x8a\xbf\x93\xe9\x80\x9d\x43\x39\x4d\x34\xea\xcb\x9f\x4d\x94\x5c\x76\x13\x50\x99\x39\x0d\x32\x1d\x37\x18\xfa\xa8\xd2\x24\x14\x75\x9f\xc0\xf0\x64\x53\x02\x7a\x13\xb1\xef\x6e\xc0\xe8\x2a\x5e\x3e\xe6\x84\xce\xd1\xb2\x13\x50\xce\xa2\x8e\x33\xef\x76\x53\x22\xc9\x55\xf7\x1a\x4f\x55\x97\xb1\xa8\x43\xf4\x67\xd2\x38\x85\x2e\xce\x60\xbd\xce\x96\xa8\x28\x22\xd7\xb6\xbf\x7c\xd5\x53\x3f\x07\xef\x76\x97\x7a\x6d\x1a\xff\x10\xac\xcf\x3a\xd2\x2b\x33\xe5\x79\xd9\x98\x77\xe7\xea\x8a\x07\x4d\x74\x7d\xb8\xea\x04\xe9\xc8\xff\x0d\x00\x00\xff\xff\x6f\x12\x36\xc4\xda\x0a\x00\x00")

func svcServerRunGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerRunGotemplate,
		"svc/server/run.gotemplate",
	)
}

func svcServerRunGotemplate() (*asset, error) {
	bytes, err := svcServerRunGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/run.gotemplate", size: 2778, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x62\xd6\x28\x16\x76\xe1\x50\x7b\x0e\x90\x4b\x93\x6e\x1b\xec\xe6\x03\x59\xa3\x7b\x28\x8a\x82\x96\xc6\x12\x61\x8a\x54\x48\xda\x89\x97\xd0\x7f\x5f\x0c\x25\xd9\x4a\xec\xda\x3e\x04\x88\xc5\x37\x33\x6f\xde\x1b\x8e\x94\xa6\x70\x6d\x72\x84\x02\x35\x5a\xe1\x31\x87\xf9\x06\xbc\x5d\x39\xc7\xe1\xe6\x01\xee\x1f\x66\xf0\xf9\xe6\x76\xc6\x59\x9a\xc2\x13\xda\x95\xd6\x52\x17\x2d\x00\x5e\xa4\x52\x60\xd6\x68\x5f\xac\xf4\x08\xbe\x94\x0e\x16\x52\x61\x04\x7f\x43\xeb\xa4\xd1\x97\x10\x02\xef\xfe\x6f\x9a\xc1\x01\xdc\x08\x8f\xc3\x53\xfa\xdd\x34\x8c\xd5\x22\x5b\x8a\x02\xc1\xad\x33\x46\xf8\x59\x9f\x16\x6a\x6b\xd6\x32\x47\x07\x0e\xed\x1a\xed\x85\x93\x39\xc2\x5c\xea\x5c\xea\xc2\xc1\xc2\x58\xf0\x25\x42\xf1\xf4\x78\x0d\xde\x0a\xed\x6a\x63\x7d\xe4\x72\xeb\x61\xe5\xa5\x92\xff\xa1\x8b\x90\xed\x69\x5a\xd8\x3a\xe3\xff\xc4\x74\x9c\x31\x59\xd1\x43\x18\xb3\x64\x94\x19\xed\xf1\xd5\x8f\x58\x32\xd2\xe8\xd3\xd2\xfb\x7a\xc4\x58\x62\x54\xde\x9d\xc0\xa8\x30\x4a\xe8\x82\x1b\x5b\xa4\xaf\x29\x81\x06\x31\x85\x31\x85\x42\x3e\x80\x50\xa5\xb4\x42\x2f\x72\xe1\x05\xa5\xa2\x07\x5b\x22\x30\x2a\xa4\x2f\x57\x73\x9e\x99\x2a\x2d\xcc\xc5\x52\xfa\x94\xfe\xde\x32\xa5\xb0\x5e\x11\x22\x2d\x33\x64\x49\x3d\x87\x51\x08\xfc\xf1\xd3\x6d\x64\xff\x28\x7c\x09\x17\x4d\x33\x62\x13\x16\xf5\xbb\x13\x4b\xfc\xf2\xf4\x78\xdd\x76\x09\x95\x58\xa2\x03\x01\x0e\x3d\x98\x05\xa0\xce\x6b\x23\xb5\x77\x20\xd6\x42\x2a\x31\x57\x08\x82\xce\xa3\x8c\x21\x7c\x31\xf7\xa2\x42\xe0\x5d\x39\x4e\xbf\x9a\xa6\x57\x6c\xb1\xd2\xd9\xbb\x02\xe3\x5d\xc6\xcf\xfd\x7f\x13\xa8\xe7\xfc\x78\x2e\x08\x2c\x69\x6d\x7d\xa8\xbd\x34\xda\xc1\xe5\x15\x7c\xff\xf1\x46\xa4\xce\xa8\x16\x10\x58\x92\xc0\xa1\xe3\x4f\xb8\x30\x16\xc7\xbd\xd4\x33\x73\xdd\xda\x32\x99\xb2\xa4\x61\x89\x45\xbf\xb2\x1a\x7e\xa7\xd0\x36\x20\x44\x51\x43\x80\x99\xf9\xdb\xbc\xa0\x7d\x4b\x10\x9a\x86\x25\x21\x58\xa1\x0b\x84\x0f\x92\x68\x6d\xcf\xef\xd0\x97\x26\x77\x84\x48\x42\xe8\xc3\x3f\xc8\xae\xb3\xcb\x77\xfc\xee\xf1\xa5\xd3\x88\x25\x49\xb2\xd5\x89\x87\xb0\x0d\xe9\x25\x9b\x12\xe2\x06\x33\x93\x47\x69\x07\x88\x27\x7c\x5e\xa1\x6b\x01\x9f\xf5\x41\x80\xab\x8d\x76\x18\x11\x6f\x24\xe5\x9c\xd3\x43\x12\x22\x84\x0b\xb2\x9e\x98\x37\xac\x89\x73\xb2\x13\x04\x64\x55\x2b\xac\x90\x3c\xa4\xeb\x72\xc2\x39\xa9\x3d\xda\x85\xc8\x90\xf9\x4d\x8d\xc3\x3c\xce\xdb\x55\xe6\x21\xb0\xd3\xfa\x1d\x90\x0f\xe0\x9d\x7e\x5f\x85\xce\x15\x5a\xb6\x23\xdf\x32\xef\xd2\xc4\x0d\x30\xa8\xee\xcd\xae\x91\xf3\x7b\x38\x49\x35\xce\xfc\xd8\xc1\xc7\x5d\xa9\xc9\x2e\xfd\x96\xfd\x38\xf3\xaf\xb0\x5b\x17\xbc\x9b\xc2\x29\x58\x7c\x86\x8f\xc3\xfb\xf0\x41\xf2\xce\xd4\xd9\xa6\xee\x79\x4d\x60\xbc\x0f\x6a\x8d\x1d\xa0\xa6\x80\xd6\x1a\xaa\xcf\x92\x9f\x94\xba\x8e\x4f\x88\x39\x8d\xd5\x9e\xa4\xed\x15\xa1\x81\x21\x7a\x91\xcb\x84\x25\x72\x11\x83\x7e\xbb\x02\x2d\x15\xa5\xea\x2f\x89\x96\x2a\xe6\x1b\x5e\x1c\x8b\x35\x3f\x87\xda\x64\x4a\xe1\xac\x61\x21\xb4\x5e\x91\x53\x9d\xda\xed\x60\x9f\x96\x3a\x4d\xe1\xd8\x1d\x00\x49\x8b\xea\xdd\x32\x6f\x03\x3a\xc4\x9f\xe4\x95\x2f\x85\x87\xcc\xe8\x35\x5a\x5a\x73\x71\xd6\xdb\xe5\xb6\x3f\x72\xb6\xcb\xec\x0d\x08\x58\x39\xb4\x17\xb9\xa9\x84\xd4\xc7\xc0\x1c\x1e\xad\xac\x84\x95\x6a\x43\x21\x8b\x95\x02\xa9\xe3\x86\x1d\x2c\xc9\x63\x7d\x8c\x7f\xc2\xde\x94\x50\x2f\x4f\xf8\xbc\x1b\xcc\x40\x23\x31\xf8\x35\xb4\x9e\x46\xea\xf2\xaa\x8f\x39\x64\xcf\xde\x78\x0d\xfc\x7c\x3e\xe2\x54\xbb\x61\xce\x72\xea\xe8\x32\x3a\x68\x55\x1b\xd1\x43\x7e\xe5\xd5\x69\x17\xba\x12\xd1\xb3\x23\xce\xd6\x6a\x73\x96\x55\x47\x1b\x39\xe4\xd5\x96\xc1\x99\x66\xb9\x9a\x54\xec\xa3\xce\xbb\x4d\x03\xbf\x5c\x7d\xc8\xb0\xaf\xa8\x6a\xb4\x8e\xb5\x3d\xec\xbd\xfd\xe2\x3a\xda\x63\x5e\xe5\x5b\x24\xbf\xbb\x99\xbc\x07\x10\x5d\x5a\xaa\xcb\x29\xac\x23\xe5\x38\x04\x55\x1e\x77\x84\x5c\xc0\x7a\xb8\x33\xda\x2f\x13\x84\x25\x6e\xa2\xdb\x79\x4e\x1f\x93\xc6\x97\x24\x71\x5f\x85\x76\x74\x25\x3c\x8c\x97\x13\x78\x29\x65\x56\x46\xa8\x52\xa0\xc8\xae\x2e\x8b\xd0\x79\x7c\xef\xd0\x47\x17\xbf\x16\xda\x68\x99\x09\xf5\x15\x45\x8e\xf6\x2f\xdc\xd0\x67\x8b\xef\x0a\x39\xd3\x8e\x8c\xf4\x90\x09\x0d\x73\xec\x53\x64\x19\x3a\x87\x39\xd5\x46\xe9\x4b\xb4\x5d\x65\x3a\x27\x29\xae\xb6\xbd\xfe\x2b\x7d\xf9\x4d\xa8\x15\xb6\x2b\x91\x7a\xfd\xfe\xc7\x8f\xc9\x49\xe0\x2f\xd8\x8d\x97\x93\x5d\x86\xf8\x7a\xdd\x5a\x97\xf9\x57\xd6\xb0\xff\x03\x00\x00\xff\xff\x66\x6b\x8f\xad\x72\x0b\x00\x00")

func svcTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGotemplate,
		"svc/transport_grpc.gotemplate",
	)
}

func svcTransport_grpcGotemplate() (*asset, error) {
	bytes, err := svcTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.gotemplate", size: 2930, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x18\xa9\x9a\xdc\xcd\xe5\xb0\x1b\x64\xd5\x88\x65\xce\xa3\xb4\x26\x69\xcb\xf9\xba\xa1\x75\x78\xda\xe1\x5f\x78\xfe\x1b\x49\x11\xcb\x2f\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func svcTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGotemplate,
		"svc/transport_http.gotemplate",
	)
}

func svcTransport_httpGotemplate() (*asset, error) {
	bytes, err := svcTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.gotemplate", size: 106, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/NAME/main.gotemplate": cmdNameMainGotemplate,
	"cmd/NAME-server/main.gotemplate": cmdNameServerMainGotemplate,
	"handlers/handlers.gotemplate": handlersHandlersGotemplate,
	"handlers/hooks.gotemplate": handlersHooksGotemplate,
	"handlers/middlewares.gotemplate": handlersMiddlewaresGotemplate,
	"svc/client/cli/handlers/handlers.gotemplate": svcClientCliHandlersHandlersGotemplate,
	"svc/client/grpc/client.gotemplate": svcClientGrpcClientGotemplate,
	"svc/client/http/client.gotemplate": svcClientHttpClientGotemplate,
	"svc/endpoints.gotemplate": svcEndpointsGotemplate,
	"svc/server/cli/cli.gotemplate": svcServerCliCliGotemplate,
	"svc/server/run.gotemplate": svcServerRunGotemplate,
	"svc/transport_grpc.gotemplate": svcTransport_grpcGotemplate,
	"svc/transport_http.gotemplate": svcTransport_httpGotemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameMainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameServerMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"handlers": &bintree{nil, map[string]*bintree{
		"handlers.gotemplate": &bintree{handlersHandlersGotemplate, map[string]*bintree{}},
		"hooks.gotemplate": &bintree{handlersHooksGotemplate, map[string]*bintree{}},
		"middlewares.gotemplate": &bintree{handlersMiddlewaresGotemplate, map[string]*bintree{}},
	}},
	"svc": &bintree{nil, map[string]*bintree{
		"client": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"handlers": &bintree{nil, map[string]*bintree{
					"handlers.gotemplate": &bintree{svcClientCliHandlersHandlersGotemplate, map[string]*bintree{}},
				}},
			}},
			"grpc": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientGrpcClientGotemplate, map[string]*bintree{}},
			}},
			"http": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientHttpClientGotemplate, map[string]*bintree{}},
			}},
		}},
		"endpoints.gotemplate": &bintree{svcEndpointsGotemplate, map[string]*bintree{}},
		"server": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"cli.gotemplate": &bintree{svcServerCliCliGotemplate, map[string]*bintree{}},
			}},
			"run.gotemplate": &bintree{svcServerRunGotemplate, map[string]*bintree{}},
		}},
		"transport_grpc.gotemplate": &bintree{svcTransport_grpcGotemplate, map[string]*bintree{}},
		"transport_http.gotemplate": &bintree{svcTransport_httpGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

