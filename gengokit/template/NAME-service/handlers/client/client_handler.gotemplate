{{ with $templateExecutor := .}}
package clienthandler

import (
	pb "{{$templateExecutor.ImportPath -}}"
)


{{range $i := $templateExecutor.Service.Methods}}
// {{$i.GetName}} implements Service.
func {{$i.GetName}}({{with index $templateExecutor.ClientArgs.MethArgs $i.GetName}}{{GoName .FunctionArgs}}{{end}}) (*pb.{{GoName $i.RequestType.GetName}}, error){
{{/*
{{- with $meth := index $templateExecutor.ClientArgs.MethArgs $i.GetName -}}
	{{- range $param := $meth.Args -}}
		{{- if not $param.IsBaseType -}}
		// Add custom business logic for interpreting {{$param.FlagArg}},
		{{- end -}}
	{{- end -}}
{{- end}}
*/}}
	request := pb.{{GoName $i.RequestType.GetName}}{
{{- with $meth := index $templateExecutor.ClientArgs.MethArgs $i.GetName -}}
	{{range $param := $meth.Args -}}
		{{- if and (and (not $param.IsBaseType) (not $param.Repeated)) (not $param.Enum)}}
		{{GoName $param.Name}} : &{{GoName $param.GoArg}},
		{{- else }}
		{{GoName $param.Name}} : {{GoName $param.GoArg}},
		{{- end -}}
	{{end -}}
{{- end}}
	}
	return &request, nil
}
{{end}}

{{end}}
